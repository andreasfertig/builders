name: gcc

on:
  push:
    tags: gcc_*

env:
  CMAKE_VERSION: 3.16.2
  NINJA_VERSION: 1.10.0
  # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-10.15-Readme.md
  #  DEVELOPER_DIR: /Applications/Xcode_10.3.app/Contents/Developer

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        # AppleClang
        - {
            name: "macOS Clang",
            os: macos-11,
            build_type: Release
          }

    steps:
    - name: Get tag name
      id: get_tag_name
      run: |
          VERSION=`echo ${GITHUB_REF/refs\/tags\//} | sed 's/gcc_//'`
          echo ::set-output name=VERSION::${VERSION}
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Building
      shell: bash
      working-directory: ${{ env.HOME }}
      env:
        CXX: clang++
        CC: clang
      run: |
        export MACOSX_DEPLOYMENT_TARGET=10.14
        export PATH=`pwd`:$PATH
        echo "${{ steps.get_tag_name.outputs.VERSION }}"
        echo $HOME
        ls -l
        pwd
        mkdir -p gcc_all/build
        cd gcc_all
        curl -L https://ftpmirror.gnu.org/gcc/gcc-${{ steps.get_tag_name.outputs.VERSION }}/gcc-${{ steps.get_tag_name.outputs.VERSION }}.tar.xz | tar xf -
        cd gcc-${{ steps.get_tag_name.outputs.VERSION }}
        ./contrib/download_prerequisites
        cd ../build
        echo "path changed"
        export CXXFLAGS="-Wno-everything"
        export CFLAGS="-Wno-everything"
        ../gcc-${{ steps.get_tag_name.outputs.VERSION }}/configure CXXFLAGS="-Wno-everything" CFLAGS="-Wno-everything" --prefix=/usr/local/gcc-${{ steps.get_tag_name.outputs.VERSION }} --enable-checking=release --enable-languages=c,c++ --enable-silent-rules --disable-multilib --with-sysroot=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk --program-suffix=-10
        make -j 2&> log.txt && tail -n 200 log.txt || tail -n 200 log.txt
        echo "build finished"
        sudo mkdir -p /usr/local/gcc-${{ steps.get_tag_name.outputs.VERSION }}
        sudo chmod 0777 /usr/local/gcc-${{ steps.get_tag_name.outputs.VERSION }}
        ls -l /usr/local
        make install-strip
        tar -cJf ../../gcc-${{ steps.get_tag_name.outputs.VERSION }}.tar.xz -C /usr/local/gcc-${{ steps.get_tag_name.outputs.VERSION }} /usr/local/gcc-${{ steps.get_tag_name.outputs.VERSION }}

    - uses: actions/upload-artifact@v2
      with:
        name: gcc-${{ steps.get_tag_name.outputs.VERSION }}
        path: gcc-${{ steps.get_tag_name.outputs.VERSION }}.tar.xz

